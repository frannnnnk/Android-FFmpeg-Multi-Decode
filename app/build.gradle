apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.vonchenchen.android_video_demos"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']

            //jniLibs.srcDirs = ['src/main/jniLibs']
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/libs']
        }
    }

//    task ndkBuild(type: Exec, description: 'Compile JNI source with NDK') {
//        Properties properties = new Properties()
//        properties.load(project.rootProject.file('local.properties').newDataInputStream())
//        def ndkDir = properties.getProperty('ndk.dir')
//
//        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
//            commandLine "$ndkDir/ndk-build.cmd", '-C', file('src/main/jni').absolutePath
//        } else {
//            commandLine "$ndkDir/ndk-build", '-C', file('src/main/jni').absolutePath
//        }
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn ndkBuild
//    }
//
//    task ndkClean(type: Exec, description: 'Clean NDK Binaries') {
//        Properties properties = new Properties()
//        properties.load(project.rootProject.file('local.properties').newDataInputStream())
//        def ndkDir = properties.getProperty('ndk.dir')
//
//        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
//            commandLine "$ndkDir/ndk-bui√éld.cmd", 'clean', '-C', file('src/main/jni').absolutePath
//        } else {
//            commandLine "$ndkDir/ndk-build", 'clean', '-C', file('src/main/jni').absolutePath
//        }
//    }
//
//    clean.dependsOn 'ndkClean'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}
